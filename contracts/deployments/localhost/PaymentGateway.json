{
  "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "minimum_wallet_validators",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maximum_wallet_validators",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "PayementGateway_DuplicatedValidators",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PayementGateway_InvalidMasterValidators",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PayementGateway_MasterValidatorShouldNotBeValidator",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PayementGateway_ShouldNotExceedMaximumValidatorsLength",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PayementGateway_ValidationCountShouldNotBeOneOrZero",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PayementGateway_ValidationCountShouldNotExceedValidatorsLength",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "PayementGateway_ValidatorsLengthShouldNoBeLessThanRequiredMinimum",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "validator",
          "type": "address"
        }
      ],
      "name": "AddValidator",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "walletAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "transactionIndex",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipientAddress",
          "type": "address"
        }
      ],
      "name": "CompletedTransaction",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "walletAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "validators",
          "type": "address[]"
        }
      ],
      "name": "CreateWallet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "transactionValueProof",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "productName",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "productId",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "indexedClientAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "indexedSellerAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "clientAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "sellerAddress",
          "type": "address"
        }
      ],
      "name": "Order",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "validator",
          "type": "address"
        }
      ],
      "name": "addValidator",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "validators",
          "type": "address[]"
        },
        {
          "internalType": "uint16",
          "name": "validationCount",
          "type": "uint16"
        }
      ],
      "name": "createWallet",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "wallet_address",
          "type": "address"
        }
      ],
      "name": "getWallet",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address[]",
              "name": "validators",
              "type": "address[]"
            },
            {
              "internalType": "address",
              "name": "masterValidator",
              "type": "address"
            },
            {
              "internalType": "uint16",
              "name": "validationCount",
              "type": "uint16"
            },
            {
              "internalType": "uint256",
              "name": "balance",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "currentPendingTransaction",
              "type": "uint256"
            }
          ],
          "internalType": "struct IPaymentGateway.Wallet",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "wallet_address",
          "type": "address"
        }
      ],
      "name": "getWalletBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        }
      ],
      "name": "initiateTransaction",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "productName",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "productId",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "walletAddress",
          "type": "address"
        }
      ],
      "name": "placeOrder",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "walletAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "transactionIndex",
          "type": "uint256"
        }
      ],
      "name": "validateTransaction",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x324752f12166dab1f7e3c02015cb2c971b7a02bbc30f2e878aa9f9a9ac80be6a",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
    "transactionIndex": 0,
    "gasUsed": "2094354",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000",
    "blockHash": "0x2341f8c400b8ff8e28ec300dc7e250856701083a40946a8712e4e07750cdb746",
    "transactionHash": "0x324752f12166dab1f7e3c02015cb2c971b7a02bbc30f2e878aa9f9a9ac80be6a",
    "logs": [],
    "blockNumber": 1,
    "cumulativeGasUsed": "2094354",
    "status": 1,
    "byzantium": true
  },
  "args": [
    2,
    5
  ],
  "numDeployments": 1,
  "solcInputHash": "fc4128614c416c6ffc78bf2f64a521e8",
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minimum_wallet_validators\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maximum_wallet_validators\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"PayementGateway_DuplicatedValidators\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PayementGateway_InvalidMasterValidators\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PayementGateway_MasterValidatorShouldNotBeValidator\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PayementGateway_ShouldNotExceedMaximumValidatorsLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PayementGateway_ValidationCountShouldNotBeOneOrZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PayementGateway_ValidationCountShouldNotExceedValidatorsLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"PayementGateway_ValidatorsLengthShouldNoBeLessThanRequiredMinimum\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"}],\"name\":\"AddValidator\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"transactionIndex\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipientAddress\",\"type\":\"address\"}],\"name\":\"CompletedTransaction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"validators\",\"type\":\"address[]\"}],\"name\":\"CreateWallet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"transactionValueProof\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"productName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"productId\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"indexedClientAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"indexedSellerAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"clientAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sellerAddress\",\"type\":\"address\"}],\"name\":\"Order\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"}],\"name\":\"addValidator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"validators\",\"type\":\"address[]\"},{\"internalType\":\"uint16\",\"name\":\"validationCount\",\"type\":\"uint16\"}],\"name\":\"createWallet\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet_address\",\"type\":\"address\"}],\"name\":\"getWallet\",\"outputs\":[{\"components\":[{\"internalType\":\"address[]\",\"name\":\"validators\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"masterValidator\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"validationCount\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentPendingTransaction\",\"type\":\"uint256\"}],\"internalType\":\"struct IPaymentGateway.Wallet\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wallet_address\",\"type\":\"address\"}],\"name\":\"getWalletBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"initiateTransaction\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"productName\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"productId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"}],\"name\":\"placeOrder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"transactionIndex\",\"type\":\"uint256\"}],\"name\":\"validateTransaction\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addValidator(address)\":{\"details\":\"This function is used to add a new validator to the seller's wallet\",\"params\":{\"validator\":\"The address of the new validator \"}},\"createWallet(address[],uint16)\":{\"details\":\"This function is used to create a new seller's wallet.\",\"params\":{\"validationCount\":\"The total number of validation required to process a transaction.\",\"validators\":\"The list of validators that can validate a pending transaction.\"}},\"getWallet(address)\":{\"details\":\"Get the seller's address\"},\"getWalletBalance(address)\":{\"details\":\"Get the seller's wallet balance\"},\"initiateTransaction(uint256,address)\":{\"details\":\"Since the seller's wallet is a multi-signature wallet, this function is used to initiate a transaction from the seller's wallet that all validators will have to validate\",\"params\":{\"amount\":\"The amount of money that validators are willing to withdraw.\",\"recipient\":\"The withdraw recipient.\"}},\"placeOrder(string,string,uint256,address)\":{\"params\":{\"price\":\"The price of the ordered product.s\",\"productId\":\"The web2 product id.\",\"productName\":\"Name of the product that the user is buying.\",\"walletAddress\":\"Seller's wallet address\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PaymentGateway.sol\":\"PaymentGateway\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/PaymentGateway.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\nimport \\\"./interfaces/PaymentGateway.i.sol\\\";\\n\\n//========== ERRORS===========\\n//=============================\\nerror PayementGateway_DuplicatedValidators();\\nerror PayementGateway_InvalidMasterValidators();\\nerror PayementGateway_InvalidPriceSent();\\nerror PayementGateway_WalletAlreadyCreated();\\nerror PayementGateway_MasterValidatorShouldNotBeValidator();\\nerror PayementGateway_InvalidValidators();\\nerror PayementGateway_ShouldNotExceedMaximumValidatorsLength();\\nerror PayementGateway_ValidatorsLengthShouldNoBeLessThanRequiredMinimum();\\nerror PayementGateway_ValidationCountShouldNotExceedValidatorsLength();\\nerror PayementGateway_ValidationCountShouldNotBeOneOrZero();\\n\\ncontract PaymentGateway is IPaymentGateway {\\n    uint256 private immutable MINIMUM_WALLET_VALIDATORS;\\n    uint256 private immutable MAXIMUM_WALLET_VALIDATORS;\\n\\n    mapping(address => Wallet) s_wallet;\\n    mapping(address => mapping(uint256 => PendingTransaction))\\n        private s_pendingTransactions;\\n\\n    event AddValidator(address indexed validator);\\n\\n    event Order(\\n        uint256 price,\\n        uint256 transactionValueProof,\\n        string productName,\\n        string productId,\\n        address indexed indexedClientAddress,\\n        address indexed indexedSellerAddress,\\n        address  clientAddress,\\n        address  sellerAddress\\n    );\\n\\n    event CompletedTransaction(\\n        address indexed walletAddress,\\n        uint256 amount,\\n        uint256 transactionIndex,\\n        address indexed recipientAddress\\n    );\\n\\n    event CreateWallet(address walletAddress, address[] validators);\\n\\n    modifier IsNotMasterValidator(address sender) {\\n        if (sender != s_wallet[sender].masterValidator) {\\n            revert PayementGateway_InvalidMasterValidators();\\n        }\\n        _;\\n    }\\n\\n    modifier IsWalletAlreadyCreated(address wallet_address) {\\n        if (s_wallet[wallet_address].validationCount > 0) {}\\n        _;\\n    }\\n\\n    modifier IsValidator(address validator, address walletAddress) {\\n        address[] memory validators = s_wallet[walletAddress].validators;\\n        bool isValidator;\\n\\n        for (uint index = 0; index < validators.length; index++) {\\n            if (validators[index] == validator) {\\n                isValidator = true;\\n            }\\n        }\\n\\n        require(isValidator == true, \\\"Milicious validator\\\");\\n        _;\\n    }\\n\\n    constructor(\\n        uint256 minimum_wallet_validators,\\n        uint256 maximum_wallet_validators\\n    ) {\\n        MINIMUM_WALLET_VALIDATORS = minimum_wallet_validators;\\n        MAXIMUM_WALLET_VALIDATORS = maximum_wallet_validators;\\n    }\\n\\n    function getWallet(\\n        address wallet_address\\n    ) external view returns (Wallet memory) {\\n        return s_wallet[wallet_address];\\n    }\\n\\n    function getWalletBalance(\\n        address wallet_address\\n    ) external view returns (uint256) {\\n        return s_wallet[wallet_address].balance;\\n    }\\n\\n    function addValidator(\\n        address validator\\n    ) external IsNotMasterValidator(msg.sender) returns (bool) {\\n        s_wallet[msg.sender].validators.push(validator);\\n        emit AddValidator(validator);\\n        return true;\\n    }\\n\\n    function createWallet(\\n        address[] memory validators,\\n        uint16 validationCount\\n    ) external IsWalletAlreadyCreated(msg.sender) returns (bool) {\\n        require(\\n            s_wallet[msg.sender].validators.length < 1,\\n            \\\"Wallet already created\\\"\\n        );\\n\\n        if (validators.length + 1 > MAXIMUM_WALLET_VALIDATORS) {\\n            revert PayementGateway_ShouldNotExceedMaximumValidatorsLength();\\n        } else if (validators.length + 1 < MINIMUM_WALLET_VALIDATORS) {\\n            revert PayementGateway_ValidatorsLengthShouldNoBeLessThanRequiredMinimum();\\n        } else if (validationCount > validators.length + 1) {\\n            revert PayementGateway_ValidationCountShouldNotExceedValidatorsLength();\\n        } else if (validationCount <= 1) {\\n            revert PayementGateway_ValidationCountShouldNotBeOneOrZero();\\n        }\\n\\n        s_wallet[msg.sender] = Wallet({\\n            balance: 0,\\n            masterValidator: msg.sender,\\n            validationCount: validationCount,\\n            validators: new address[](0),\\n            currentPendingTransaction: 0\\n        });\\n\\n        for (uint i = 0; i < validators.length; i++) {\\n            //Wallte msg.sender should not be among validators\\n            if (validators[i] == msg.sender) {\\n                revert PayementGateway_MasterValidatorShouldNotBeValidator();\\n            }\\n\\n            //Check for duplicated validators\\n            for (uint index = 0; index < validators.length; index++) {\\n                if (validators[index] == validators[i] && i != index) {\\n                    revert PayementGateway_DuplicatedValidators();\\n                }\\n            }\\n            s_wallet[msg.sender].validators.push(validators[i]);\\n        }\\n\\n        emit CreateWallet(msg.sender, validators);\\n        return true;\\n    }\\n\\n    function initiateTransaction(\\n        uint256 amount,\\n        address recipient\\n    ) external returns (bool) {\\n        Wallet memory wallet = s_wallet[msg.sender];\\n\\n        require(amount > 0, \\\"Transaction amout can't be 0\\\");\\n        require(wallet.balance >= amount, \\\"Invalid balance\\\");\\n        require(wallet.validators[0] != address(0), \\\"Wallet not created\\\");\\n\\n        uint256 newTransactionIndex = ++s_wallet[msg.sender]\\n            .currentPendingTransaction;\\n\\n        s_pendingTransactions[msg.sender][\\n            newTransactionIndex\\n        ] = PendingTransaction({\\n            validators: new address[](0),\\n            amount: amount,\\n            recipient: recipient,\\n            status: WalletTransactionStats.ONGOING\\n        });\\n        return true;\\n    }\\n\\n    function validateTransaction(\\n        address walletAddress,\\n        uint256 transactionIndex\\n    ) external IsValidator(msg.sender, walletAddress) returns (bool) {\\n        PendingTransaction memory transaction = s_pendingTransactions[\\n            walletAddress\\n        ][transactionIndex];\\n\\n        for (uint index = 0; index < transaction.validators.length; index++) {\\n            require(\\n                transaction.validators[index] != msg.sender,\\n                \\\"Already participated\\\"\\n            );\\n        }\\n\\n        s_pendingTransactions[walletAddress][transactionIndex].validators.push(\\n            msg.sender\\n        );\\n\\n        if (\\n            s_pendingTransactions[walletAddress][transactionIndex]\\n                .validators\\n                .length +\\n                1 >=\\n            s_wallet[walletAddress].validationCount\\n        ) {\\n            (bool success, ) = transaction.recipient.call{\\n                value: transaction.amount\\n            }(\\\"\\\");\\n\\n            require(success, \\\"Failed to process the transaction\\\");\\n        }\\n\\n        return true;\\n    }\\n\\n    function placeOrder(\\n        string memory productName,\\n        string memory productId,\\n        uint256 price,\\n        address walletAddress\\n    ) external payable returns(bool ) {\\n        require(msg.value >= price, \\\"Invalid amount\\\");\\n        s_wallet[walletAddress].balance += msg.value;\\n        uint256 value = msg.value;\\n\\n        emit Order(\\n            price,\\n            value,\\n            productName,\\n            productId,\\n            walletAddress,\\n            msg.sender,\\n            msg.sender,\\n            walletAddress\\n        );\\n        \\n        return true;\\n    }\\n}\\n\",\"keccak256\":\"0xc80a7b9b65b2cecea97cc9eb48fc0f98313a27f95cd33aa33953804a2db718bb\",\"license\":\"MIT\"},\"contracts/interfaces/PaymentGateway.i.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.19;\\n\\ninterface IPaymentGateway {\\n    /****\\n     * @dev This struct describes represents the structure of a seller's wallet.\\n     * @param validators The list of validators that can validate a withdraw.\\n     * @param masterValidator this is the address of the wallet's creator.\\n     * @param validationCount The total number of validation required to initiate a withdraw.\\n     * @param balance The wallet balance.\\n     */\\n    struct Wallet {\\n        address[] validators;\\n        address masterValidator;\\n        uint16 validationCount;\\n        uint256 balance;\\n        uint256 currentPendingTransaction;\\n    }\\n\\n    struct ReturnedOrder {\\n        uint256 price;\\n        string productName;\\n        string productId;\\n        address client;\\n        address walleAddress;\\n    }\\n\\n    enum WalletTransactionStats {\\n        COMPLETED,\\n        ONGOING\\n    }\\n\\n    struct PendingTransaction {\\n        address recipient;\\n        address[] validators;\\n        uint256 amount;\\n        WalletTransactionStats status;\\n    }\\n\\n    /**\\n     * @dev Get the seller's address\\n     */\\n    function getWallet(address wallet_address) external returns (Wallet memory);\\n\\n    /**\\n     *@dev Get the seller's wallet balance\\n     */\\n    function getWalletBalance(\\n        address wallet_address\\n    ) external returns (uint256);\\n\\n    /**\\n     *@dev This function is used to add a new validator to the seller's wallet\\n     @param validator The address of the new validator \\n     */\\n    function addValidator(address validator) external returns (bool);\\n\\n    /**\\n     *@dev Since the seller's wallet is a multi-signature wallet, this function is used to initiate\\n           a transaction from the seller's wallet that all validators will have to validate\\n     * @param amount The amount of money that validators are willing to withdraw.\\n     * @param recipient The withdraw recipient.\\n     */\\n    function initiateTransaction(\\n        uint256 amount,\\n        address recipient\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev This function is used to create a new seller's wallet.\\n     * @param validators The list of validators that can validate a pending transaction.\\n     * @param validationCount The total number of validation required to process a transaction.\\n     */\\n    function createWallet(\\n        address[] memory validators,\\n        uint16 validationCount\\n    ) external returns (bool);\\n\\n    function validateTransaction(\\n        address walletAddress,\\n        uint256 transactionIndex\\n    ) external returns (bool);\\n\\n    /**\\n     *\\n     * @param productName Name of the product that the user is buying.\\n     * @param productId The web2 product id.\\n     * @param price The price of the ordered product.s\\n     * @param walletAddress Seller's wallet address\\n     */\\n    function placeOrder(\\n        string memory productName,\\n        string memory productId,\\n        uint256 price,\\n        address walletAddress\\n    ) external payable returns (bool);\\n}\\n\",\"keccak256\":\"0x2e2d47cf502b363350ebb703469f0db07ab4edbccc6c5e0666f5d0b2bf711eaf\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60c06040523480156200001157600080fd5b50604051620025fe380380620025fe83398181016040528101906200003791906200008f565b81608081815250508060a081815250505050620000d6565b600080fd5b6000819050919050565b620000698162000054565b81146200007557600080fd5b50565b60008151905062000089816200005e565b92915050565b60008060408385031215620000a957620000a86200004f565b5b6000620000b98582860162000078565b9250506020620000cc8582860162000078565b9150509250929050565b60805160a051612502620000fc6000396000610c0f01526000610c7601526125026000f3fe6080604052600436106100705760003560e01c80635b25e5291161004e5780635b25e5291461012c578063dd1b9dcc14610169578063e42bb8aa14610199578063ed8ec194146101d657610070565b806304d0a6471461007557806329f9c0b2146100b25780634d238c8e146100ef575b600080fd5b34801561008157600080fd5b5061009c60048036038101906100979190611861565b610213565b6040516100a991906119f8565b60405180910390f35b3480156100be57600080fd5b506100d960048036038101906100d49190611a46565b610383565b6040516100e69190611aa1565b60405180910390f35b3480156100fb57600080fd5b5061011660048036038101906101119190611861565b61097b565b6040516101239190611aa1565b60405180910390f35b34801561013857600080fd5b50610153600480360381019061014e9190611c41565b610b33565b6040516101609190611aa1565b60405180910390f35b610183600480360381019061017e9190611d52565b611131565b6040516101909190611aa1565b60405180910390f35b3480156101a557600080fd5b506101c060048036038101906101bb9190611df1565b61124f565b6040516101cd9190611aa1565b60405180910390f35b3480156101e257600080fd5b506101fd60048036038101906101f89190611861565b6116b4565b60405161020a9190611e40565b60405180910390f35b61021b6116ff565b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a0016040529081600082018054806020026020016040519081016040528092919081815260200182805480156102e957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161029f575b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160149054906101000a900461ffff1661ffff1661ffff168152602001600282015481526020016003820154815250509050919050565b6000338360008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000180548060200260200160405190810160405280929190818152602001828054801561044a57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610400575b50505050509050600080600090505b82518110156104c7578473ffffffffffffffffffffffffffffffffffffffff1683828151811061048c5761048b611e5b565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16036104b457600191505b80806104bf90611eb9565b915050610459565b50600115158115151461050f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050690611f5e565b60405180910390fd5b6000600160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008881526020019081526020016000206040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820180548060200260200160405190810160405280929190818152602001828054801561064757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116105fd575b50505050508152602001600282015481526020016003820160009054906101000a900460ff16600181111561067f5761067e611f7e565b5b600181111561069157610690611f7e565b5b81525050905060005b816020015151811015610746573373ffffffffffffffffffffffffffffffffffffffff16826020015182815181106106d5576106d4611e5b565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1603610733576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072a90611ff9565b60405180910390fd5b808061073e90611eb9565b91505061069a565b50600160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000888152602001908152602001600020600101339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160149054906101000a900461ffff1661ffff1660018060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a8152602001908152602001600020600101805490506108b19190612019565b1061096c576000816000015173ffffffffffffffffffffffffffffffffffffffff1682604001516040516108e49061207e565b60006040518083038185875af1925050503d8060008114610921576040519150601f19603f3d011682016040523d82523d6000602084013e610926565b606091505b505090508061096a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096190612105565b60405180910390fd5b505b60019550505050505092915050565b6000336000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610a44576040517f1314de4600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001839080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff167f6a7a7b9e5967ba1cf76c3d7d5a9b98e96f11754855b04564fada97b94741ad3660405160405180910390a26001915050919050565b60003360008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160149054906101000a9050505060016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018054905010610c0d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c0490612171565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000060018551610c3c9190612019565b1115610c74576040517f3616e0fb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000060018551610ca39190612019565b1015610cdb576040517f5819267c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018451610ce99190612019565b8361ffff161115610d26576040517f8732f30c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018361ffff1611610d64576040517fb268dedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040518060a00160405280600067ffffffffffffffff811115610d8a57610d89611ad2565b5b604051908082528060200260200182016040528015610db85781602001602082028036833780820191505090505b5081526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018461ffff1681526020016000815260200160008152506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019080519060200190610e4a929190611748565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548161ffff021916908361ffff160217905550606082015181600201556080820151816003015590505060005b84518110156110ec573373ffffffffffffffffffffffffffffffffffffffff16858281518110610f0257610f01611e5b565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1603610f57576040517f65c81b8d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b855181101561101c57858281518110610f7657610f75611e5b565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16868281518110610fa757610fa6611e5b565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16148015610fd25750808214155b15611009576040517f5d39c59600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b808061101490611eb9565b915050610f5a565b506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000185828151811061107157611070611e5b565b5b60200260200101519080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080806110e490611eb9565b915050610ecf565b507f8b0cf9bb22e9f60b3e33ad2d75842de34507fa10cda7364a0a4913f874afe6b6338560405161111e92919061220f565b60405180910390a1600191505092915050565b600082341015611176576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161116d9061228b565b60405180910390fd5b346000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160008282546111c79190612019565b9250508190555060003490503373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fc63605f0f06c5cf329e3a908940fd444267ed63ad1ca6282829deb35bf3fd14986848a8a338a60405161123a96959493929190612319565b60405180910390a36001915050949350505050565b6000806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a00160405290816000820180548060200260200160405190810160405280929190818152602001828054801561132057602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116112d6575b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160149054906101000a900461ffff1661ffff1661ffff168152602001600282015481526020016003820154815250509050600084116113f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113ef906123d4565b60405180910390fd5b838160600151101561143f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161143690612440565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16816000015160008151811061146f5761146e611e5b565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16036114cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114c4906124ac565b60405180910390fd5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003016000815461151d90611eb9565b919050819055905060405180608001604052808573ffffffffffffffffffffffffffffffffffffffff168152602001600067ffffffffffffffff81111561156757611566611ad2565b5b6040519080825280602002602001820160405280156115955781602001602082028036833780820191505090505b5081526020018681526020016001808111156115b4576115b3611f7e565b5b815250600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101908051906020019061166a929190611748565b506040820151816002015560608201518160030160006101000a81548160ff021916908360018111156116a05761169f611f7e565b5b021790555090505060019250505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201549050919050565b6040518060a0016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600061ffff16815260200160008152602001600081525090565b8280548282559060005260206000209081019282156117c1579160200282015b828111156117c05782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190611768565b5b5090506117ce91906117d2565b5090565b5b808211156117eb5760008160009055506001016117d3565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061182e82611803565b9050919050565b61183e81611823565b811461184957600080fd5b50565b60008135905061185b81611835565b92915050565b600060208284031215611877576118766117f9565b5b60006118858482850161184c565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6118c381611823565b82525050565b60006118d583836118ba565b60208301905092915050565b6000602082019050919050565b60006118f98261188e565b6119038185611899565b935061190e836118aa565b8060005b8381101561193f57815161192688826118c9565b9750611931836118e1565b925050600181019050611912565b5085935050505092915050565b600061ffff82169050919050565b6119638161194c565b82525050565b6000819050919050565b61197c81611969565b82525050565b600060a083016000830151848203600086015261199f82826118ee565b91505060208301516119b460208601826118ba565b5060408301516119c7604086018261195a565b5060608301516119da6060860182611973565b5060808301516119ed6080860182611973565b508091505092915050565b60006020820190508181036000830152611a128184611982565b905092915050565b611a2381611969565b8114611a2e57600080fd5b50565b600081359050611a4081611a1a565b92915050565b60008060408385031215611a5d57611a5c6117f9565b5b6000611a6b8582860161184c565b9250506020611a7c85828601611a31565b9150509250929050565b60008115159050919050565b611a9b81611a86565b82525050565b6000602082019050611ab66000830184611a92565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611b0a82611ac1565b810181811067ffffffffffffffff82111715611b2957611b28611ad2565b5b80604052505050565b6000611b3c6117ef565b9050611b488282611b01565b919050565b600067ffffffffffffffff821115611b6857611b67611ad2565b5b602082029050602081019050919050565b600080fd5b6000611b91611b8c84611b4d565b611b32565b90508083825260208201905060208402830185811115611bb457611bb3611b79565b5b835b81811015611bdd5780611bc9888261184c565b845260208401935050602081019050611bb6565b5050509392505050565b600082601f830112611bfc57611bfb611abc565b5b8135611c0c848260208601611b7e565b91505092915050565b611c1e8161194c565b8114611c2957600080fd5b50565b600081359050611c3b81611c15565b92915050565b60008060408385031215611c5857611c576117f9565b5b600083013567ffffffffffffffff811115611c7657611c756117fe565b5b611c8285828601611be7565b9250506020611c9385828601611c2c565b9150509250929050565b600080fd5b600067ffffffffffffffff821115611cbd57611cbc611ad2565b5b611cc682611ac1565b9050602081019050919050565b82818337600083830152505050565b6000611cf5611cf084611ca2565b611b32565b905082815260208101848484011115611d1157611d10611c9d565b5b611d1c848285611cd3565b509392505050565b600082601f830112611d3957611d38611abc565b5b8135611d49848260208601611ce2565b91505092915050565b60008060008060808587031215611d6c57611d6b6117f9565b5b600085013567ffffffffffffffff811115611d8a57611d896117fe565b5b611d9687828801611d24565b945050602085013567ffffffffffffffff811115611db757611db66117fe565b5b611dc387828801611d24565b9350506040611dd487828801611a31565b9250506060611de58782880161184c565b91505092959194509250565b60008060408385031215611e0857611e076117f9565b5b6000611e1685828601611a31565b9250506020611e278582860161184c565b9150509250929050565b611e3a81611969565b82525050565b6000602082019050611e556000830184611e31565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611ec482611969565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611ef657611ef5611e8a565b5b600182019050919050565b600082825260208201905092915050565b7f4d696c6963696f75732076616c696461746f7200000000000000000000000000600082015250565b6000611f48601383611f01565b9150611f5382611f12565b602082019050919050565b60006020820190508181036000830152611f7781611f3b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f416c726561647920706172746963697061746564000000000000000000000000600082015250565b6000611fe3601483611f01565b9150611fee82611fad565b602082019050919050565b6000602082019050818103600083015261201281611fd6565b9050919050565b600061202482611969565b915061202f83611969565b925082820190508082111561204757612046611e8a565b5b92915050565b600081905092915050565b50565b600061206860008361204d565b915061207382612058565b600082019050919050565b60006120898261205b565b9150819050919050565b7f4661696c656420746f2070726f6365737320746865207472616e73616374696f60008201527f6e00000000000000000000000000000000000000000000000000000000000000602082015250565b60006120ef602183611f01565b91506120fa82612093565b604082019050919050565b6000602082019050818103600083015261211e816120e2565b9050919050565b7f57616c6c657420616c7265616479206372656174656400000000000000000000600082015250565b600061215b601683611f01565b915061216682612125565b602082019050919050565b6000602082019050818103600083015261218a8161214e565b9050919050565b61219a81611823565b82525050565b600082825260208201905092915050565b60006121bc8261188e565b6121c681856121a0565b93506121d1836118aa565b8060005b838110156122025781516121e988826118c9565b97506121f4836118e1565b9250506001810190506121d5565b5085935050505092915050565b60006040820190506122246000830185612191565b818103602083015261223681846121b1565b90509392505050565b7f496e76616c696420616d6f756e74000000000000000000000000000000000000600082015250565b6000612275600e83611f01565b91506122808261223f565b602082019050919050565b600060208201905081810360008301526122a481612268565b9050919050565b600081519050919050565b60005b838110156122d45780820151818401526020810190506122b9565b60008484015250505050565b60006122eb826122ab565b6122f58185611f01565b93506123058185602086016122b6565b61230e81611ac1565b840191505092915050565b600060c08201905061232e6000830189611e31565b61233b6020830188611e31565b818103604083015261234d81876122e0565b9050818103606083015261236181866122e0565b90506123706080830185612191565b61237d60a0830184612191565b979650505050505050565b7f5472616e73616374696f6e20616d6f75742063616e2774206265203000000000600082015250565b60006123be601c83611f01565b91506123c982612388565b602082019050919050565b600060208201905081810360008301526123ed816123b1565b9050919050565b7f496e76616c69642062616c616e63650000000000000000000000000000000000600082015250565b600061242a600f83611f01565b9150612435826123f4565b602082019050919050565b600060208201905081810360008301526124598161241d565b9050919050565b7f57616c6c6574206e6f7420637265617465640000000000000000000000000000600082015250565b6000612496601283611f01565b91506124a182612460565b602082019050919050565b600060208201905081810360008301526124c581612489565b905091905056fea2646970667358221220e14cf9746267e3399523d7c359e4cef8725f6b52049770340ab024fd8beede6164736f6c63430008140033",
  "deployedBytecode": "0x6080604052600436106100705760003560e01c80635b25e5291161004e5780635b25e5291461012c578063dd1b9dcc14610169578063e42bb8aa14610199578063ed8ec194146101d657610070565b806304d0a6471461007557806329f9c0b2146100b25780634d238c8e146100ef575b600080fd5b34801561008157600080fd5b5061009c60048036038101906100979190611861565b610213565b6040516100a991906119f8565b60405180910390f35b3480156100be57600080fd5b506100d960048036038101906100d49190611a46565b610383565b6040516100e69190611aa1565b60405180910390f35b3480156100fb57600080fd5b5061011660048036038101906101119190611861565b61097b565b6040516101239190611aa1565b60405180910390f35b34801561013857600080fd5b50610153600480360381019061014e9190611c41565b610b33565b6040516101609190611aa1565b60405180910390f35b610183600480360381019061017e9190611d52565b611131565b6040516101909190611aa1565b60405180910390f35b3480156101a557600080fd5b506101c060048036038101906101bb9190611df1565b61124f565b6040516101cd9190611aa1565b60405180910390f35b3480156101e257600080fd5b506101fd60048036038101906101f89190611861565b6116b4565b60405161020a9190611e40565b60405180910390f35b61021b6116ff565b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a0016040529081600082018054806020026020016040519081016040528092919081815260200182805480156102e957602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161029f575b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160149054906101000a900461ffff1661ffff1661ffff168152602001600282015481526020016003820154815250509050919050565b6000338360008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000180548060200260200160405190810160405280929190818152602001828054801561044a57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610400575b50505050509050600080600090505b82518110156104c7578473ffffffffffffffffffffffffffffffffffffffff1683828151811061048c5761048b611e5b565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16036104b457600191505b80806104bf90611eb9565b915050610459565b50600115158115151461050f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050690611f5e565b60405180910390fd5b6000600160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008881526020019081526020016000206040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820180548060200260200160405190810160405280929190818152602001828054801561064757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116105fd575b50505050508152602001600282015481526020016003820160009054906101000a900460ff16600181111561067f5761067e611f7e565b5b600181111561069157610690611f7e565b5b81525050905060005b816020015151811015610746573373ffffffffffffffffffffffffffffffffffffffff16826020015182815181106106d5576106d4611e5b565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1603610733576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072a90611ff9565b60405180910390fd5b808061073e90611eb9565b91505061069a565b50600160008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000888152602001908152602001600020600101339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000808973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160149054906101000a900461ffff1661ffff1660018060008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a8152602001908152602001600020600101805490506108b19190612019565b1061096c576000816000015173ffffffffffffffffffffffffffffffffffffffff1682604001516040516108e49061207e565b60006040518083038185875af1925050503d8060008114610921576040519150601f19603f3d011682016040523d82523d6000602084013e610926565b606091505b505090508061096a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096190612105565b60405180910390fd5b505b60019550505050505092915050565b6000336000808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610a44576040517f1314de4600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600001839080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508273ffffffffffffffffffffffffffffffffffffffff167f6a7a7b9e5967ba1cf76c3d7d5a9b98e96f11754855b04564fada97b94741ad3660405160405180910390a26001915050919050565b60003360008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010160149054906101000a9050505060016000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018054905010610c0d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c0490612171565b60405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000060018551610c3c9190612019565b1115610c74576040517f3616e0fb00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000060018551610ca39190612019565b1015610cdb576040517f5819267c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018451610ce99190612019565b8361ffff161115610d26576040517f8732f30c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60018361ffff1611610d64576040517fb268dedf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040518060a00160405280600067ffffffffffffffff811115610d8a57610d89611ad2565b5b604051908082528060200260200182016040528015610db85781602001602082028036833780820191505090505b5081526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018461ffff1681526020016000815260200160008152506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000820151816000019080519060200190610e4a929190611748565b5060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548161ffff021916908361ffff160217905550606082015181600201556080820151816003015590505060005b84518110156110ec573373ffffffffffffffffffffffffffffffffffffffff16858281518110610f0257610f01611e5b565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1603610f57576040517f65c81b8d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b855181101561101c57858281518110610f7657610f75611e5b565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16868281518110610fa757610fa6611e5b565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16148015610fd25750808214155b15611009576040517f5d39c59600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b808061101490611eb9565b915050610f5a565b506000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000185828151811061107157611070611e5b565b5b60200260200101519080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080806110e490611eb9565b915050610ecf565b507f8b0cf9bb22e9f60b3e33ad2d75842de34507fa10cda7364a0a4913f874afe6b6338560405161111e92919061220f565b60405180910390a1600191505092915050565b600082341015611176576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161116d9061228b565b60405180910390fd5b346000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160008282546111c79190612019565b9250508190555060003490503373ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fc63605f0f06c5cf329e3a908940fd444267ed63ad1ca6282829deb35bf3fd14986848a8a338a60405161123a96959493929190612319565b60405180910390a36001915050949350505050565b6000806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060a00160405290816000820180548060200260200160405190810160405280929190818152602001828054801561132057602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116112d6575b505050505081526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160149054906101000a900461ffff1661ffff1661ffff168152602001600282015481526020016003820154815250509050600084116113f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113ef906123d4565b60405180910390fd5b838160600151101561143f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161143690612440565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16816000015160008151811061146f5761146e611e5b565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff16036114cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114c4906124ac565b60405180910390fd5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003016000815461151d90611eb9565b919050819055905060405180608001604052808573ffffffffffffffffffffffffffffffffffffffff168152602001600067ffffffffffffffff81111561156757611566611ad2565b5b6040519080825280602002602001820160405280156115955781602001602082028036833780820191505090505b5081526020018681526020016001808111156115b4576115b3611f7e565b5b815250600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101908051906020019061166a929190611748565b506040820151816002015560608201518160030160006101000a81548160ff021916908360018111156116a05761169f611f7e565b5b021790555090505060019250505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201549050919050565b6040518060a0016040528060608152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600061ffff16815260200160008152602001600081525090565b8280548282559060005260206000209081019282156117c1579160200282015b828111156117c05782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190611768565b5b5090506117ce91906117d2565b5090565b5b808211156117eb5760008160009055506001016117d3565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061182e82611803565b9050919050565b61183e81611823565b811461184957600080fd5b50565b60008135905061185b81611835565b92915050565b600060208284031215611877576118766117f9565b5b60006118858482850161184c565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6118c381611823565b82525050565b60006118d583836118ba565b60208301905092915050565b6000602082019050919050565b60006118f98261188e565b6119038185611899565b935061190e836118aa565b8060005b8381101561193f57815161192688826118c9565b9750611931836118e1565b925050600181019050611912565b5085935050505092915050565b600061ffff82169050919050565b6119638161194c565b82525050565b6000819050919050565b61197c81611969565b82525050565b600060a083016000830151848203600086015261199f82826118ee565b91505060208301516119b460208601826118ba565b5060408301516119c7604086018261195a565b5060608301516119da6060860182611973565b5060808301516119ed6080860182611973565b508091505092915050565b60006020820190508181036000830152611a128184611982565b905092915050565b611a2381611969565b8114611a2e57600080fd5b50565b600081359050611a4081611a1a565b92915050565b60008060408385031215611a5d57611a5c6117f9565b5b6000611a6b8582860161184c565b9250506020611a7c85828601611a31565b9150509250929050565b60008115159050919050565b611a9b81611a86565b82525050565b6000602082019050611ab66000830184611a92565b92915050565b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611b0a82611ac1565b810181811067ffffffffffffffff82111715611b2957611b28611ad2565b5b80604052505050565b6000611b3c6117ef565b9050611b488282611b01565b919050565b600067ffffffffffffffff821115611b6857611b67611ad2565b5b602082029050602081019050919050565b600080fd5b6000611b91611b8c84611b4d565b611b32565b90508083825260208201905060208402830185811115611bb457611bb3611b79565b5b835b81811015611bdd5780611bc9888261184c565b845260208401935050602081019050611bb6565b5050509392505050565b600082601f830112611bfc57611bfb611abc565b5b8135611c0c848260208601611b7e565b91505092915050565b611c1e8161194c565b8114611c2957600080fd5b50565b600081359050611c3b81611c15565b92915050565b60008060408385031215611c5857611c576117f9565b5b600083013567ffffffffffffffff811115611c7657611c756117fe565b5b611c8285828601611be7565b9250506020611c9385828601611c2c565b9150509250929050565b600080fd5b600067ffffffffffffffff821115611cbd57611cbc611ad2565b5b611cc682611ac1565b9050602081019050919050565b82818337600083830152505050565b6000611cf5611cf084611ca2565b611b32565b905082815260208101848484011115611d1157611d10611c9d565b5b611d1c848285611cd3565b509392505050565b600082601f830112611d3957611d38611abc565b5b8135611d49848260208601611ce2565b91505092915050565b60008060008060808587031215611d6c57611d6b6117f9565b5b600085013567ffffffffffffffff811115611d8a57611d896117fe565b5b611d9687828801611d24565b945050602085013567ffffffffffffffff811115611db757611db66117fe565b5b611dc387828801611d24565b9350506040611dd487828801611a31565b9250506060611de58782880161184c565b91505092959194509250565b60008060408385031215611e0857611e076117f9565b5b6000611e1685828601611a31565b9250506020611e278582860161184c565b9150509250929050565b611e3a81611969565b82525050565b6000602082019050611e556000830184611e31565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611ec482611969565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611ef657611ef5611e8a565b5b600182019050919050565b600082825260208201905092915050565b7f4d696c6963696f75732076616c696461746f7200000000000000000000000000600082015250565b6000611f48601383611f01565b9150611f5382611f12565b602082019050919050565b60006020820190508181036000830152611f7781611f3b565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f416c726561647920706172746963697061746564000000000000000000000000600082015250565b6000611fe3601483611f01565b9150611fee82611fad565b602082019050919050565b6000602082019050818103600083015261201281611fd6565b9050919050565b600061202482611969565b915061202f83611969565b925082820190508082111561204757612046611e8a565b5b92915050565b600081905092915050565b50565b600061206860008361204d565b915061207382612058565b600082019050919050565b60006120898261205b565b9150819050919050565b7f4661696c656420746f2070726f6365737320746865207472616e73616374696f60008201527f6e00000000000000000000000000000000000000000000000000000000000000602082015250565b60006120ef602183611f01565b91506120fa82612093565b604082019050919050565b6000602082019050818103600083015261211e816120e2565b9050919050565b7f57616c6c657420616c7265616479206372656174656400000000000000000000600082015250565b600061215b601683611f01565b915061216682612125565b602082019050919050565b6000602082019050818103600083015261218a8161214e565b9050919050565b61219a81611823565b82525050565b600082825260208201905092915050565b60006121bc8261188e565b6121c681856121a0565b93506121d1836118aa565b8060005b838110156122025781516121e988826118c9565b97506121f4836118e1565b9250506001810190506121d5565b5085935050505092915050565b60006040820190506122246000830185612191565b818103602083015261223681846121b1565b90509392505050565b7f496e76616c696420616d6f756e74000000000000000000000000000000000000600082015250565b6000612275600e83611f01565b91506122808261223f565b602082019050919050565b600060208201905081810360008301526122a481612268565b9050919050565b600081519050919050565b60005b838110156122d45780820151818401526020810190506122b9565b60008484015250505050565b60006122eb826122ab565b6122f58185611f01565b93506123058185602086016122b6565b61230e81611ac1565b840191505092915050565b600060c08201905061232e6000830189611e31565b61233b6020830188611e31565b818103604083015261234d81876122e0565b9050818103606083015261236181866122e0565b90506123706080830185612191565b61237d60a0830184612191565b979650505050505050565b7f5472616e73616374696f6e20616d6f75742063616e2774206265203000000000600082015250565b60006123be601c83611f01565b91506123c982612388565b602082019050919050565b600060208201905081810360008301526123ed816123b1565b9050919050565b7f496e76616c69642062616c616e63650000000000000000000000000000000000600082015250565b600061242a600f83611f01565b9150612435826123f4565b602082019050919050565b600060208201905081810360008301526124598161241d565b9050919050565b7f57616c6c6574206e6f7420637265617465640000000000000000000000000000600082015250565b6000612496601283611f01565b91506124a182612460565b602082019050919050565b600060208201905081810360008301526124c581612489565b905091905056fea2646970667358221220e14cf9746267e3399523d7c359e4cef8725f6b52049770340ab024fd8beede6164736f6c63430008140033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "addValidator(address)": {
        "details": "This function is used to add a new validator to the seller's wallet",
        "params": {
          "validator": "The address of the new validator "
        }
      },
      "createWallet(address[],uint16)": {
        "details": "This function is used to create a new seller's wallet.",
        "params": {
          "validationCount": "The total number of validation required to process a transaction.",
          "validators": "The list of validators that can validate a pending transaction."
        }
      },
      "getWallet(address)": {
        "details": "Get the seller's address"
      },
      "getWalletBalance(address)": {
        "details": "Get the seller's wallet balance"
      },
      "initiateTransaction(uint256,address)": {
        "details": "Since the seller's wallet is a multi-signature wallet, this function is used to initiate a transaction from the seller's wallet that all validators will have to validate",
        "params": {
          "amount": "The amount of money that validators are willing to withdraw.",
          "recipient": "The withdraw recipient."
        }
      },
      "placeOrder(string,string,uint256,address)": {
        "params": {
          "price": "The price of the ordered product.s",
          "productId": "The web2 product id.",
          "productName": "Name of the product that the user is buying.",
          "walletAddress": "Seller's wallet address"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 33,
        "contract": "contracts/PaymentGateway.sol:PaymentGateway",
        "label": "s_wallet",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_struct(Wallet)624_storage)"
      },
      {
        "astId": 40,
        "contract": "contracts/PaymentGateway.sol:PaymentGateway",
        "label": "s_pendingTransactions",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_uint256,t_struct(PendingTransaction)649_storage))"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_enum(WalletTransactionStats)638": {
        "encoding": "inplace",
        "label": "enum IPaymentGateway.WalletTransactionStats",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_mapping(t_uint256,t_struct(PendingTransaction)649_storage))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(uint256 => struct IPaymentGateway.PendingTransaction))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_uint256,t_struct(PendingTransaction)649_storage)"
      },
      "t_mapping(t_address,t_struct(Wallet)624_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct IPaymentGateway.Wallet)",
        "numberOfBytes": "32",
        "value": "t_struct(Wallet)624_storage"
      },
      "t_mapping(t_uint256,t_struct(PendingTransaction)649_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct IPaymentGateway.PendingTransaction)",
        "numberOfBytes": "32",
        "value": "t_struct(PendingTransaction)649_storage"
      },
      "t_struct(PendingTransaction)649_storage": {
        "encoding": "inplace",
        "label": "struct IPaymentGateway.PendingTransaction",
        "members": [
          {
            "astId": 640,
            "contract": "contracts/PaymentGateway.sol:PaymentGateway",
            "label": "recipient",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 643,
            "contract": "contracts/PaymentGateway.sol:PaymentGateway",
            "label": "validators",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 645,
            "contract": "contracts/PaymentGateway.sol:PaymentGateway",
            "label": "amount",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 648,
            "contract": "contracts/PaymentGateway.sol:PaymentGateway",
            "label": "status",
            "offset": 0,
            "slot": "3",
            "type": "t_enum(WalletTransactionStats)638"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_struct(Wallet)624_storage": {
        "encoding": "inplace",
        "label": "struct IPaymentGateway.Wallet",
        "members": [
          {
            "astId": 615,
            "contract": "contracts/PaymentGateway.sol:PaymentGateway",
            "label": "validators",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 617,
            "contract": "contracts/PaymentGateway.sol:PaymentGateway",
            "label": "masterValidator",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 619,
            "contract": "contracts/PaymentGateway.sol:PaymentGateway",
            "label": "validationCount",
            "offset": 20,
            "slot": "1",
            "type": "t_uint16"
          },
          {
            "astId": 621,
            "contract": "contracts/PaymentGateway.sol:PaymentGateway",
            "label": "balance",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 623,
            "contract": "contracts/PaymentGateway.sol:PaymentGateway",
            "label": "currentPendingTransaction",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint16": {
        "encoding": "inplace",
        "label": "uint16",
        "numberOfBytes": "2"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}